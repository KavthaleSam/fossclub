# Generated by Django 4.0.1 on 2022-01-22 07:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('short_description', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Perk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A short catchy name for the perk', max_length=100)),
                ('short_description', models.CharField(help_text='A short description of the perk, what it offers', max_length=255)),
                ('long_description', models.TextField(blank=True, help_text='Here you can go into detail about what the perk is about, why you are offering it, etc.')),
                ('image', models.ImageField(upload_to='perks')),
                ('status', models.CharField(choices=[('AC', 'Active'), ('IN', 'Inactive')], default='AC', max_length=2)),
                ('quantity', models.IntegerField(default=100000, help_text='The number of times that this perk can be claimed, if it is only in limited quantity')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('required_badges', models.ManyToManyField(help_text='Badges that act as a eligibility criterion for this perk', to='perks.Badge')),
            ],
        ),
    ]
